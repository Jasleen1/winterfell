name: Benchmarks

on:
  pull_request:
    types: [opened, reopened]
  issue_comment:
    types: [created]


jobs:
  run_benchmarks:
    if: (contains(github.event.comment.html_url, '/pull/') && contains(github.event.comment.body, 'benchrun')) || (github.event_name == 'pull_request')
    runs-on: ubuntu-latest

    steps:
      - name: Who triggered this?
        env:
          PULL_ID: ${{ github.event.client_payload.pull_id }}
        run: |
          echo "action triggerd by https://github.com/novifinancial/winterfell/pull/${{ env.PULL_ID }} "
      - uses: actions/checkout@master
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
          override: true
      - name: Install critcmp binary crate
        uses: actions-rs/install@v0.1
        with:
          crate: critcmp
          version: latest
          use-tool-cache: true
      - name: Checkout master
        if: success()
        uses: actions/checkout@v2
        with:
          fetch-depth: 50 # this is to make sure we obtain the target base commit
          path: winterfell
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          working-directory: winterfell
          filters: |
            math:
              - 'math/**'
            crypto:
              - 'crypto/**'
      - name: Build benchmark base
        if: success()
        working-directory: ./winterfell
        timeout-minutes: 60
        run: |
          set -x
          git checkout ${{ github.event.pull_request.base.sha }}
          cargo bench -- --save-baseline master
          git checkout -
          cargo bench -- --save-baseline pr
      - name: Initialize results file
        if: success()
        run: |
          set -o pipefail
          echo '```' > critcmp_results
      - name: Run critcmp on examples
        if: success()
        run: |
          set -o pipefail
          critcmp --target-dir ./winterfell/examples/target master pr | tee -a critcmp_results
      - name: report on math data
        if: success() && steps.filter.outputs.math == 'true'
        run: |
          set -o pipefail
          critcmp --target-dir ./winterfell/math/target master pr | tee -a critcmp_results
      - name: report on crypto data
        if: success() && steps.filter.outputs.crypto == 'true'
        run: |
          set -o pipefail
          critcmp --target-dir ./winterfell/crypto/target master pr | tee -a critcmp_results
      - name: Finalize results file
        if: success()
        run: |
          set -o pipefail
          echo '```' >> critcmp_results
      - name: comment PR with bench results
        uses: machine-learning-apps/pr-comment@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: critcmp_results
